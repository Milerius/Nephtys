matrix:
  include:
    - os: linux
      language: python
      cache: pip
      python: 3.7
      sudo: true
      dist: xenial
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - NEPHTYS_CMAKE_DEBUG_GCC_8=ON
        - CXX=g++-8
        - CC=gcc-8
        - WILL_COMPILE_CODE=ON
    - os: linux
      language: python
      cache: pip
      python: 3.7
      sudo: true
      dist: xenial
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - NEPHTYS_CMAKE_DEBUG_GCC_8=ON
        - CODE_COVERAGE=ON
        - CXX=g++-8
        - CC=gcc-8
        - WILL_COMPILE_CODE=ON
    - os: linux
      language: python
      python: 3.7
      sudo: true
      dist: xenial
      addons:
        apt:
          packages:
            - doxygen
            - doxygen-gui
            - doxygen-doc
      env:
        - NEPHTYS_BUILD_DOCUMENTATION=ON
    - os: osx
      osx_image: xcode10.2
install:
  - |
    if [[ (-x $(which brew)) ]]; then
      brew update
      brew install cmake ninja llvm python3
      brew upgrade cmake
      cmake --version
      export PATH="/usr/local/opt/llvm/bin:$PATH"
      export CC=clang
      export CXX=clang++
      export LD=ld.lld
      export AR=llvm-ar
      export RANLIB=llvm-ranlib
      export LDFLAGS=-L/usr/local/opt/llvm/lib
      export CPPFLAGS=-I/usr/local/opt/llvm/include
      clang --version
      clang++ --version
      pip3 install conan
      conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan
      conan remote add skypjack https://api.bintray.com/conan/skypjack/conan
      conan remote add conan-doom_strong_types https://api.bintray.com/conan/milerius/doom_strong_types
    fi
  - |
    if [ "${NEPHTYS_BUILD_DOCUMENTATION}" == "ON" ]; then
      pip install sphinx==1.8.4
      pip install breathe
    fi
  - |
    if [ "${WILL_COMPILE_CODE}" == "ON" ] && [ "${TRAVIS_OS_NAME}" == "linux" ]; then
      sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100
      sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100
      DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
      mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
      gcov --version
      g++ --version
      cmake --version
    fi
  - |
    if [ "${TRAVIS_OS_NAME}" == "linux" ] && [ "${NEPHTYS_CMAKE_DEBUG_GCC_8}" == "ON" ]; then
      if [[ "${CODE_COVERAGE}" == "ON" ]]; then gem install coveralls-lcov ; fi
      curl -sL https://github.com/linux-test-project/lcov/releases/download/v1.14/lcov-1.14.tar.gz | tar xz
      sudo make -C lcov-1.14 install
      lcov --version
      CMAKE_URL="https://cmake.org/files/v3.14/cmake-3.14.0-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
      pip install conan
      conan profile new default --detect
      conan profile update settings.compiler.version=8 default
      conan profile update settings.compiler.libcxx=libstdc++11 default
      conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan
      conan remote add skypjack https://api.bintray.com/conan/skypjack/conan
      conan remote add conan-doom_strong_types https://api.bintray.com/conan/milerius/doom_strong_types
      cd -
    fi
script:
  - |
    if [ "${NEPHTYS_BUILD_DOCUMENTATION}" == "ON" ]; then
        ./scripts/build_doc.sh
    fi
  - |
    if [[ "${NEPHTYS_CMAKE_DEBUG_GCC_8}" == ON ]]; then
      source_tree_dir=$PWD
      mkdir cmake-build-debug
      cd cmake-build-debug
      if [[ "${CODE_COVERAGE}" = "ON" ]]; then
        ${DEPS_DIR}/cmake/bin/cmake -DCMAKE_CXX_COMPILER=g++-8 -DCMAKE_C_COMPILER=gcc-8 -DNEPHTYS_COVERAGE=ON ../
      else
        ${DEPS_DIR}/cmake/bin/cmake -DCMAKE_CXX_COMPILER=g++-8 -DAUTO_BUILD_APPIMAGE=ON -DCMAKE_C_COMPILER=gcc-8 ../
      fi
      make VERBOSE=1 -j2
    fi
  - |
    if [[ (-x $(which brew)) ]]; then
      mkdir cmake-build-debug
      cd cmake-build-debug
      conan install --build sfml ../
      cmake ../
      make VERBOSE=1 -j2
      cd bin
      ./nephtys-client-test --reporters=xml --out=result.xml -s || true
      curl https://report.ci/upload.py --output upload.py && python upload.py -n "Doctest [travis-ci ${TRAVIS_OS_NAME}]"
      cd ../
    fi
  - |
    if [ "${WILL_COMPILE_CODE}" == "ON" ]; then
      parent_directory=$(dirname "$PWD")
      cd bin
      ./nephtys-client-test --reporters=xml --out=result.xml -s || true
      if [[ "${CODE_COVERAGE}" = "ON" ]]; then
        cd -
        find . -print | grep -i '.*[.]gc*'
        lcov -d . -c -o coverage.info
        lcov -r coverage.info "/usr*" -o coverage.info
        lcov -r coverage.info "$HOME/.conan/*" -o coverage.info
        lcov -r coverage.info "$parent_directory/*.test.*" -o coverage.info
        lcov -r coverage.info "$parent_directory/vendor/noesisgui/include/*" -o coverage.info
        lcov -l coverage.info
        coveralls-lcov coverage.info  # upload results
      fi
      curl https://report.ci/upload.py --output upload.py && python upload.py -n "Doctest [travis-ci ${TRAVIS_OS_NAME}]"
      cd ../
    fi
after_success:
  - |-
    if [ "${TRAVIS_OS_NAME}" == "linux" ] && [ "${NEPHTYS_CMAKE_DEBUG_GCC_8}" == "ON" ]; then
      cd $source_tree_dir
      ./scripts/deploy_linux.sh
    fi

deploy:
  provider: bintray
  file: "scripts/bintray.linux.json"
  user: "milerius"
  key:
    secure: Y+7FfEAXA8YFS2jT5nU1UZN9AM1AzQ8g56STrMvEP3NEwMApo7TGjhj5B7dej4UsSyw2kOfe+gYcPbtKPl84KG/p8Oq9SqB2p56VaEuicwJ9ZGJCtlQ68CFOLfzZp80M38ddm/vguI7C8lGJikx1OPAqzgSWdLspmM+RAAg5dhBc6b1mti3GsX+xZzcgKpC5HfTMhgJsfHeTKi69rT7YyMfIY0vVH+OtvTCZDtIX09NS2LAFb34iBQC41jk0BBy3ux0OkFQGCiZU3qMcfWafNwPZpoijX1k8ymcBhTC/AMd/AOX9h33INiWRvHmbcWeFKrmzY86wgt9JhuCSMcA9spvYJYF7TAUoTZlUE9x85c/CG74gpuy1i4ldLQN7z/jQNipABZya7yUEzRpR/fo/fU8saiLr3z6AE0JxBBLic4OQ5H5onlLVQ/jkmWD6KIjdSJ4ud5SH1nYie3vMNDxRqg/KaddFPcVeFozhkjgdwT5gv/0MvUDEdGIL29FaS2ds5DKsoBj77IVexl8gaB3MZ0KJBqHiBfFdyUIrvtzCgXiSthCz9W69l6SfyhDaiccbiTB9PDcPAo1dceuDveL89WZnGhwThWrlu+uYEBxdNE4B3CNowqia1crA/cuLXIKtVeyYQaRapor6MhO+APO4QOBZWc7WhC1dA6W81GFohHI=
  on:
    branch: roman_dev_linux_3
    condition: $NEPHTYS_CMAKE_DEBUG_GCC_8 = ON
  skip_cleanup: true # to upload artifacts created during the build